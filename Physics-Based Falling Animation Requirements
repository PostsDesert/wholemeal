## Physics-Based Falling Animation Requirements

Please use your tools to read the latest documentation on anime.js from https://animejs.com/documentation/ to ensure the implementation aligns with the latest features and best practices.

### Animation Trigger & Duration
- **Trigger**: Immediate activation when user presses Enter, 's', or 'j' keys (existing goToCart functionality). The user just clicks they don't need to hold the key.
- **Total Duration**: 2 seconds

### Animation Sequence

#### Phase 1 - Preparation (0-0.2s)
- Rapid fade transition to hide food labels 
- The emojis should start from the same position as they were in inside food-group-container.
- Show emojis with same opacity as spinning state (0.92 opacity)
- Shopping cart ðŸ›’ appears at bottom center of screen with margin from edge (same size as food emojis)

#### Phase 2 - Falling (0.2s-1.8s) 
- All three emojis fall simultaneously from current positions. They should reach the shopping cart around the same time.
- Realistic physics with gravity acceleration using anime.js easing (starts slow, speeds up).
- Realistic perspective shrinking curve (non-linear - slower shrinking initially, faster as they approach)
- Final Size: Emojis shrink small enough to visually fit inside the shopping cart basket portion of the ðŸ›’ emoji
- Slight horizontal wobbles during descent for visual interest
- Emojis maintain straight downward trajectory toward shopping cart

#### Phase 3 - Landing & Completion (1.8s-2.0s)
- Small "absorption" effect when emojis reach shopping cart
- Shopping cart has slight bounce animation upon impact
- Animation completes, remains on spinner page
- Navigation buttons become visible
- Spinner items reset for next spin

### Visual Specifications
- **Tooltip hidden**: The tooltip "Press enter to create combo" should not be visible during the animation.
- **Shopping Cart**: ðŸ›’ emoji, same size as food emojis (before shrinking), positioned bottom center with margin
- **Emoji Opacity**: Maintains 0.92 opacity throughout fall (consistent with spinning state)
- **Perspective Effect**: Realistic non-linear shrinking curve using anime.js advanced easing
- **Wobble Effect**: Subtle horizontal variations for natural movement using anime.js transform properties
- **Responsive Design**: Scales proportionally across all screen sizes while maintaining core animation flow

### Physics & Interaction
- **Gravity Simulation**: Realistic acceleration curve using anime.js easing functions
- **Skip Functionality**: Users cannot skip the animation.
- **Post-Animation State**: Stays on current page, reveals navigation buttons, no shopping cart visible
- **Interaction Blocking**: Other spinner interactions disabled during animation

### Technical Performance
- **Animation Library**: Anime.js for advanced physics and timeline control
- **Timeline Management**: Anime.js timeline for coordinated multi-phase animation
- **Responsive Scaling**: Animation values adapt to screen size while maintaining visual proportions
- **Graceful Interruption**: Clean animation cleanup when skipped or interrupted

### Dependencies
- **New Dependency**: Anime.js library integration
- **Import Strategy**: Standard npm package installation and ES6 import
- **Bundle Impact**: Lightweight addition for enhanced animation capabilities